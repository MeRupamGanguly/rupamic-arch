# Stage 1: Build the Go binary
FROM golang:1.23.5-alpine as builder

# Set the working directory inside the container
WORKDIR /app

# Copy the Go source code and Go module files to the container
COPY go.mod go.sum ./
COPY . /app/

# Run `go mod tidy` to ensure all dependencies are fetched
RUN go mod tidy

# Set the working directory to the 'cmd' directory inside 'user' (where the main entry is)
WORKDIR /app/user/cmd

# Build the Go binary
RUN go build -o /app/user/cmd/user ./user.go

# Stage 2: Create the final image with a smaller base image
FROM alpine:3.16

# Install required CA certificates (for HTTPS requests)
RUN apk --no-cache add ca-certificates

# Set the working directory inside the container (optional: makes it clearer)
WORKDIR /app

# Copy the compiled Go binary from the builder stage
COPY --from=builder /app/user/cmd/user /usr/local/bin/user

# Expose the port the Go app will run on
EXPOSE 5002

# Define the entrypoint (Go binary)
ENTRYPOINT ["user"]

# Pass the default argument, which can be overridden at runtime
CMD ["--prod=true"]